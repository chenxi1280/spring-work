<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.work.boot.dao.PayuserDao">
  <resultMap id="BaseResultMap" type="com.work.boot.pojo.entity.Payuser">
    <id column="userpayid" jdbcType="INTEGER" property="userpayid" />
    <result column="uid" jdbcType="VARCHAR" property="uid" />
    <result column="paymentid" jdbcType="INTEGER" property="paymentid" />
    <result column="paymoney" jdbcType="DECIMAL" property="paymoney" />
    <result column="patstate" jdbcType="INTEGER" property="patstate" />
    <result column="payuserdate" jdbcType="TIMESTAMP" property="payuserdate" />
  </resultMap>
  <sql id="Base_Column_List">
    userpayid, `uid`, paymentid, paymoney, patstate, payuserdate
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from payuser
    where userpayid = #{userpayid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from payuser
    where userpayid = #{userpayid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="userpayid" keyProperty="userpayid" parameterType="com.work.boot.pojo.entity.Payuser" useGeneratedKeys="true">
    insert into payuser (`uid`, paymentid, paymoney,
      patstate, payuserdate)
    values (#{uid,jdbcType=VARCHAR}, #{paymentid,jdbcType=INTEGER}, #{paymoney,jdbcType=DECIMAL},
      #{patstate,jdbcType=INTEGER}, #{payuserdate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="userpayid" keyProperty="userpayid" parameterType="com.work.boot.pojo.entity.Payuser" useGeneratedKeys="true">
    insert into payuser
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        `uid`,
      </if>
      <if test="paymentid != null">
        paymentid,
      </if>
      <if test="paymoney != null">
        paymoney,
      </if>
      <if test="patstate != null">
        patstate,
      </if>
      <if test="payuserdate != null">
        payuserdate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="paymentid != null">
        #{paymentid,jdbcType=INTEGER},
      </if>
      <if test="paymoney != null">
        #{paymoney,jdbcType=DECIMAL},
      </if>
      <if test="patstate != null">
        #{patstate,jdbcType=INTEGER},
      </if>
      <if test="payuserdate != null">
        #{payuserdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.work.boot.pojo.entity.Payuser">
    update payuser
    <set>
      <if test="uid != null">
        `uid` = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="paymentid != null">
        paymentid = #{paymentid,jdbcType=INTEGER},
      </if>
      <if test="paymoney != null">
        paymoney = #{paymoney,jdbcType=DECIMAL},
      </if>
      <if test="patstate != null">
        patstate = #{patstate,jdbcType=INTEGER},
      </if>
      <if test="payuserdate != null">
        payuserdate = #{payuserdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where userpayid = #{userpayid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.work.boot.pojo.entity.Payuser">
    update payuser
    set `uid` = #{uid,jdbcType=VARCHAR},
      paymentid = #{paymentid,jdbcType=INTEGER},
      paymoney = #{paymoney,jdbcType=DECIMAL},
      patstate = #{patstate,jdbcType=INTEGER},
      payuserdate = #{payuserdate,jdbcType=TIMESTAMP}
    where userpayid = #{userpayid,jdbcType=INTEGER}
  </update>

<!--  sal-->

  <select id="selectAllByQuery" resultType="com.work.boot.pojo.vo.PayuserVo">
    select <include refid="Base_Column_List" />
    from payuser
    <where>
<!--      <if test="name != null and name!=''">-->
<!--        and name like CONCAT('%',#{name},'%')-->
<!--      </if>-->
<!--      <if test="flag != null and flag!=''">-->
<!--        and flag like CONCAT('%',#{flag},'%')-->
<!--      </if>-->
<!--      <if test="note != null and note!=''">-->
<!--        and note like CONCAT('%',#{note},'%')-->
<!--      </if>-->
<!--      <if test="system != null">-->
<!--        and system=#{system}-->
<!--      </if>-->
    </where>
    limit #{start},#{limit}



  </select>
  <select id="selectCount" resultType="java.lang.Integer">
    select     count(*)
    from payuser
    <where>
      <!--      <if test="name != null and name!=''">-->
      <!--        and name like CONCAT('%',#{name},'%')-->
      <!--      </if>-->
      <!--      <if test="flag != null and flag!=''">-->
      <!--        and flag like CONCAT('%',#{flag},'%')-->
      <!--      </if>-->
      <!--      <if test="note != null and note!=''">-->
      <!--        and note like CONCAT('%',#{note},'%')-->
      <!--      </if>-->
      <!--      <if test="system != null">-->
      <!--        and system=#{system}-->
      <!--      </if>-->
    </where>


  </select>
    <select id="selectAll" resultType="com.work.boot.pojo.entity.Payuser">
      select <include refid="Base_Column_List" />
      from payuser
    </select>
  <select id="selectByUserList" resultType="com.work.boot.pojo.vo.PayuserVo">
    select <include refid="Base_Column_List" />
    from payuser
    <where>
      `uid` in <foreach collection="users" separator="," open="(" close=")" item="u">#{u.uid} </foreach>
      <if test="paymentid != null and paymentid !=''">
        and paymentid = #{paymentid}

      </if>

    </where>
    limit #{start},#{limit}

  </select>
  <select id="selectByUserCount" resultType="java.lang.Integer">
    select count(*)
    from payuser
    <where>
      `uid` in <foreach collection="users" separator="," open="(" close=")" item="u">#{u.uid} </foreach>
      <if test="paymentid != null and paymentid !=''">
        and  paymentid = #{paymentid}

      </if>

    </where>

  </select>


</mapper>